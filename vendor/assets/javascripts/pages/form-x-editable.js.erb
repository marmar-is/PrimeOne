$(function(){
  //defaults
  $.fn.editable.defaults.url = '/policy';
  $.fn.editable.defaults.mode = 'inline';
  $.fn.editable.defaults.ajaxOptions = {type: "PATCH"};

  //editables
  $('#policy_number').editable({
    params: function(params) {
      var data = {};
      data['policy'] = {};
      data['policy'][params.name] = params.value
      data['id'] = params.pk;

      return data;
    },

    success: function(response, newValue) {
      $('.policy_number_display').text(newValue);
    }
  });

  $('#client_code').editable({
    params: function(params) {
      var data = {};
      data['policy'] = {};
      data['policy'][params.name] = params.value
      data['id'] = params.pk;

      return data;
    },

    success: function(response, newValue) {
      $('.client_code_display').text(newValue);
    }
  });

  $('#status').editable({
    params: function(params) {
      var data = {};
      data['policy'] = {};
      data['policy'][params.name] = params.value
      data['id'] = params.pk;

      return data;
    },

    source: [
      {value: 'POPULATED', text: 'POPULATED'},
      {value: 'GENERATED', text: 'GENERATED'},
      {value: 'ERRING', text: 'ERRING'},
      {value: 'CORRECTED', text: 'CORRECTED'},
      {value: 'ISSUED', text: 'ISSUED'}
    ],

    success: function(response, newValue) {
      $('.status_display').text(newValue);
    }
  });

  $('.edate').editable({
    params: function(params) {
      var data = {};
      data['policy'] = {};
      data['policy'][params.name] = params.value
      data['id'] = params.pk;

      return data;
    },
    viewformat: 'M/DD/YYYY',
    template: 'MMM / D / YYYY',
    combodate: {
      minYear: 1950,
      maxYear: 2050,
      minuteStep: 1
    }
  });

  $('#address').editable({
    params: function(params) {
      var data = {};
      data['policy'] = {};
      data['policy']['street'] = params.value.street;
      data['policy']['city'] = params.value.city;
      data['policy']['state'] = params.value.state;
      data['policy']['zip'] = params.value.zip;
      data['id'] = params.pk;

      return data;
    },

    validate: function(value) {
      if(value.city == '') return 'City is required!';
      if(value.state == '') return 'State is required!';
      if(value.zip == '') return 'Zip Code is required!';
      if(value.street == '') return 'Street is required!';
    }
  });

  var brokers = [];

  /*
  #Broker.select([:id, :name]).map{|b| {id: b.id, text:b.name}}
  [ {id: 1, text: "Action GroupInc dba AG Ins Agy"}, {id: 2, text: "Al Bourdeau Insurance Svcs,Inc"}, {id: 3, text: "American Insurance Agency Grp"}, {id: 4, text: "Anchor Insurance Group Inc."}, {id: 5, text: "Ann Arbor Insurance Assoc.,Inc"}, {id: 6, text: "ATB Insurance Agency"}, {id: 7, text: "Bencivenga Insurance"}, {id: 8, text: "Brown-Pixley Insurance Agency,"}, {id: 9, text: "Cantor Insurance Group, LLC"}, {id: 10, text: "Creative Insurance Solutions"}, {id: 11, text: "Custom Insurance Agency"}, {id: 12, text: "DDI Insurance Agency, LLC"}, {id: 13, text: "Fawaz Insurance Agency Inc."}, {id: 14, text: "Frank Haddad Insurance Agency"}, {id: 15, text: "Great Lakes Ins Agency Assoc."}, {id: 16, text: "HAD Insurance Associates"}, {id: 17, text: "Hallmark Agency, Inc."}, {id: 18, text: "Hallmark Associates Insurance"}, {id: 19, text: "Harbor Country Insurance Agy"}, {id: 20, text: "Independent Insurance Services"}, {id: 21, text: "Insurance Advisors Inc."}, {id: 22, text: "Insurance Providers of Michign"}, {id: 23, text: "JPS Insurance Agency LLC"}, {id: 24, text: "Kaplani Insurance Agency, Inc"}, {id: 25, text: "Kejbou Insurance Agency Inc."}, {id: 26, text: "Lakepointe Ins. Agency, Inc."}, {id: 27, text: "Lind and Lind Insurance Agency"}, {id: 28, text: "Macomb-Gerlach Agency, Inc."}, {id: 29, text: "Metro Financial Services LLC"}, {id: 30, text: "Michigan Insurance Group"}, {id: 31, text: "Millennium Insurance & Invest"}, {id: 32, text: "Morris Insurance Group Inc"}, {id: 33, text: "Mourer Foster Inc."}, {id: 34, text: "OakPointe Insurance Agency Inc"}, {id: 35, text: "Potter & Roose Ins. Flint"}, {id: 36, text: "Primary Insurance Agency"}, {id: 37, text: "Rye Agency, Inc."}, {id: 38, text: "Shears II Insurance Agcy, Inc."}, {id: 39, text: "Shoemaker Group Inc"}, {id: 40, text: "Signature Insurance"}, {id: 41, text: "Stu Garthe Agency, LLC"}, {id: 42, text: "T.A. Conrad Agency, Inc."}, {id: 43, text: "Tabak Insurance Agency PLLC"}, {id: 44, text: "Tait Insurance Agency, Inc."}, {id: 45, text: "Upper Penisula Ins. Agency Inc"}, {id: 46, text: "Viking Insurance Agency"}, {id: 47, text: "Walker Group"}]
  */

  "<% Broker.select([:id, :name]).each do |b| %>"
    brokers.push({ id: "<%= b.id %>", text: "<%= b.name %>"})
  "<% end %>"

  $('#broker_id').editable({
    params: function(params) {
      var data = {};
      data['policy'] = {};
      data['policy']['broker_id'] = params.value
      data['id'] = params.pk;

      return data;
    },

    source: brokers,
    select2: {
      width: 350,
      placeholder: 'Select a Broker',
      allowClear: true
    }
  });

  $('.prop.locs.editable.address').editable({
    params: function(params) {
      var data = {};
      data['policy'] = {};
      data['policy']['property_attributes'] = { id: params.name.split(" ")[0] }
      data['policy']['property_attributes']['locations_attributes'] = [
        {
          id: params.name.split(" ")[1],
          street: params.value.street,
          city: params.value.city,
          state: params.value.state,
          zip: params.value.zip
        }
      ];

      data['id'] = params.pk;

      return data;
    },

    validate: function(value) {
      if(value.city == '') return 'City is required!';
      if(value.state == '') return 'State is required!';
      if(value.zip == '') return 'Zip Code is required!';
      if(value.street == '') return 'Street is required!';
    }
  });

  $('#prop.locs.year_built.editable').editable({
    params: function(params) {
      var data = {};
      data['policy'] = {};
      data['policy'][params.name] = params.value
      data['id'] = params.pk;

      return data;
    },

    viewformat: 'MM/DD/YYYY',
    template: 'D / MMMM / YYYY',
    combodate: {
      minYear: 1950,
      maxYear: 2050,
      minuteStep: 1
    }
  });

  $('.prop.locs.editable').editable({
    params: function(params) {
      var data = {};
      data['policy'] = {};
      data['policy']['property_attributes'] = { id: params.name.split(" ")[0] }
      data['policy']['property_attributes']['locations_attributes'] = [];

      loc = { id: params.name.split(" ")[1] };
      loc[params.name.split(" ")[2]] = params.value;

      data['policy']['property_attributes']['locations_attributes'].push(loc);

      data['id'] = params.pk;

      return data;
    }
  });

  $('.prop.editable').editable({
    params: function(params) {
      var data = {};
      data['policy'] = {};
      data['policy']['property_attributes'] = { id: params.name.split(" ")[0] }
      data['policy']['property_attributes'][params.name.split(" ")[1]] = params.value;

      data['id'] = params.pk;

      return data;
    }
  });

  $('.doc.editable').editable({
    params: function(params) {

      var data = {};
      data['policy'] = {};
      data['policy']['docs_attributes'] = [
        {
          id: params.name,
          active: true,
          var_1: params.value.var_1,
          var_2: params.value.var_2,
          var_3: params.value.var_3,
          var_4: params.value.var_4,
          var_5: params.value.var_5,
          var_6: params.value.var_6
        }
      ];
      data['id'] = params.pk;

      return data;
    }
  });


  $('.editable').editable({
    params: function(params) {
      var data = {};
      data['policy'] = {};
      data['policy'][params.name] = params.value
      data['id'] = params.pk;

      //console.log(data);

      return data;
    },
    success: function(response, newValue) {
      $('.policy_'+$(this)[0].id+'_display').text(newValue);
    }
  });



  $('#event').editable({
    placement: 'right',
    combodate: {
      firstItem: 'name'
    }
  });

  $('#meeting_start').editable({
    format: 'yyyy-mm-dd hh:ii',
    viewformat: 'dd/mm/yyyy hh:ii',
    validate: function(v) {
      if(v && v.getDate() == 10) return 'Day cant be 10!';
    },
    datetimepicker: {
      todayBtn: 'linked',
      weekStart: 1
    }
  });

  $('#comments').editable({
    showbuttons: 'bottom'
  });

  $('#note').editable();
  $('#pencil').click(function(e) {
    e.stopPropagation();
    e.preventDefault();
    $('#note').editable('toggle');
  });

  $('#state').editable({
    source: ["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Dakota","North Carolina","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]
  });

  $('#state2').editable({
    value: 'California',
    typeahead: {
      name: 'state',
      local: ["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Dakota","North Carolina","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]
    }
  });


  $('#tags').editable({
    inputclass: 'input-large',
    select2: {
      tags: ['html', 'javascript', 'css', 'ajax'],
      tokenSeparators: [",", " "]
    }
  });




  $('#policy .editable').on('hidden', function(e, reason){
    if(reason === 'save' || reason === 'nochange') {
      var $next = $(this).closest('tr').next().find('.editable');
      if($('#autoopen').is(':checked')) {
        setTimeout(function() {
          $next.editable('show');
        }, 300);
      } else {
        $next.focus();
      }
    }
  });
});
